name: Build and Push to Artifact Registry

on:
  push:
    branches: 
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  REGISTRY: europe-central2-docker.pkg.dev
  PROJECT_ID: cv-ai-handler
  REPOSITORY: docker-cv-ai-handler
  IMAGE_NAME: cv-ai-handler

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'oracle'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Extract version from pom.xml
        id: extract-version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Project version: $VERSION"

      - name: Generate image tags
        id: meta
        run: |
          VERSION=${{ steps.extract-version.outputs.version }}
          REGISTRY_PATH="${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}"
          
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # Tagged release - use tag name and latest
            TAG_NAME=${GITHUB_REF#refs/tags/}
            echo "tags=${REGISTRY_PATH}:${TAG_NAME},${REGISTRY_PATH}:latest" >> $GITHUB_OUTPUT
            echo "is_release=true" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            # Main branch - use version and latest
            echo "tags=${REGISTRY_PATH}:${VERSION},${REGISTRY_PATH}:latest" >> $GITHUB_OUTPUT
            echo "is_release=false" >> $GITHUB_OUTPUT
          else
            # Other branches - use version with branch name and commit SHA
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            SHORT_SHA=${GITHUB_SHA::8}
            echo "tags=${REGISTRY_PATH}:${VERSION}-${BRANCH_NAME}-${SHORT_SHA}" >> $GITHUB_OUTPUT
            echo "is_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker to use gcloud as credential helper
        run: gcloud auth configure-docker ${{ env.REGISTRY }} --quiet

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ steps.extract-version.outputs.version }}
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            VCS_REF=${{ github.sha }}

      - name: Generate SBOM
        if: github.event_name != 'pull_request'
        uses: anchore/sbom-action@v0
        with:
          image: ${{ steps.meta.outputs.tags }}
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Upload SBOM
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ steps.extract-version.outputs.version }}
          path: sbom.spdx.json

      - name: Security scan with Trivy
        if: github.event_name != 'pull_request'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.meta.outputs.tags }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        if: github.event_name != 'pull_request'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Output build summary
        if: github.event_name != 'pull_request'
        run: |
          echo "## ðŸš€ Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… **Docker image built and pushed successfully!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“¦ **Image Details:**" >> $GITHUB_STEP_SUMMARY
          echo "- **Tags:** \`${{ steps.meta.outputs.tags }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** \`${{ steps.extract-version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Registry:** \`${{ env.REGISTRY }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository:** \`${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ”— **Registry URL:** https://console.cloud.google.com/artifacts/docker/${{ env.PROJECT_ID }}/europe-central2/${{ env.REPOSITORY }}" >> $GITHUB_STEP_SUMMARY